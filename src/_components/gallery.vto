{{ set images = it.images || [] }}

<div class="gallery">
    {{ for image of images }}

            {{#
            This is the new logic to generate the thumbnail path.
            1. Get the filename from the full path (e.g., "my-photo.jpg").
            2. Remove the file extension (e.g., "my-photo").
            3. Construct the new path: "thumbnail/" + "my-photo" + "_thumb.jpg".
        #}}
        {{ set filename = image.src.split('/').pop() }}
        {{ set nameWithoutExt = filename.split('.').slice(0, -1).join('.') }}
        {{ set thumbSrc = "thumbnails/" + nameWithoutExt + "_thumb.jpg" }}

        <figure class="gallery-item">
            <img 
                src="{{ thumbSrc }}" 
                alt="{{ image.alt }}" 
                loading="lazy"
                onclick="openLightbox('{{ image.src}}')"
            >
            {{ if image.caption }}
                <figcaption>{{ image.caption }}</figcaption>
            {{ /if }}
        </figure>
    {{ /for }}
</div>


<script>
  function openLightbox(imageSrc) {
    const lightbox = document.querySelector('.lightbox');
    const lightboxImage = document.querySelector('.lightbox img');
    lightboxImage.src = imageSrc;
    lightbox.classList.add('active');
  }

  function closeLightbox() {
    const lightbox = document.querySelector('.lightbox');
    lightbox.classList.remove('active');
  }

  document.addEventListener('DOMContentLoaded', () => {
    const lightbox = document.createElement('div');
    lightbox.className = 'lightbox';
    lightbox.innerHTML = `
      <div class="lightbox-img-wrapper">
        <img src="" alt="Lightbox Image" />
        <span class="lightbox-close" onclick="closeLightbox()">&times;</span>
      </div>
    `;
    document.body.appendChild(lightbox);
  });
</script>

<style scoped>
  figure.gallery-item {
      margin: 0;
  }
  .gallery {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
        padding-block: 1.5rem;
  }
    
  .gallery-item {
    flex: 1 1 calc(50.333% - 10px);
    max-width: calc(50.333% - 10px);
    cursor: pointer;
  }
    
  .gallery-item img {
    width: 100%;
    height: auto;
    border-radius: 4px;
    transition: transform 0.3s;
  }

  .gallery-item img:hover {
    transform: scale(1.05);
  }
    
  /* Lightbox styling */
  .lightbox {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  .lightbox.active {
    display: flex;
  }

  .lightbox-img-wrapper {
    position: relative;
    display: inline-block;
    max-width: 90vw;
    max-height: 90vh;
  }

  .lightbox-img-wrapper img {
    max-width: 100%;
    max-height: 100%;
    box-shadow: 0 0 14px rgb(101 92 92 / 82%);
    border-radius: 5px;
    display: block;
  }

  .lightbox-close {
    position: absolute;
    top: 8px;
    right: 8px;
    color: white;
    font-size: 2.2rem;
    cursor: pointer;
    z-index: 1010;
    background: rgba(0,0,0,0.5);
    border: none;
    padding: 0 8px;
    line-height: 1;
    user-select: none;
    border-radius: 4px;
    transition: background 0.2s;
  }
  .lightbox-close:hover {
    color: #ffb3b3;
    background: rgba(0,0,0,0.8);
  }

  @media (max-width: 600px) {
    .lightbox-close {
      font-size: 1.5rem;
      top: 4px;
      right: 4px;
      padding: 0 6px;
    }
  }
</style>